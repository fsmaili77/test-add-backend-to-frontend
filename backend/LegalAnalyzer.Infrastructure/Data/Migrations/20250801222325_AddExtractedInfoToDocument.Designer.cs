// <auto-generated />
using System;
using LegalAnalyzer.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegalAnalyzer.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250801222325_AddExtractedInfoToDocument")]
    partial class AddExtractedInfoToDocument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("AnalysisDuration")
                        .HasColumnType("time");

                    b.Property<int?>("AnalysisProgress")
                        .HasColumnType("int");

                    b.Property<string>("AnalysisResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("en");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.DocumentKeyword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentKeywords", (string)null);
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.DocumentTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentTags", (string)null);
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.Document", b =>
                {
                    b.OwnsOne("LegalAnalyzer.Domain.Entities.ExtractedInfo", "ExtractedInfo", b1 =>
                        {
                            b1.Property<Guid>("DocumentId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("DocumentId");

                            b1.ToTable("ExtractedInfoes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DocumentId");

                            b1.OwnsMany("LegalAnalyzer.Domain.Entities.FinancialTerm", "FinancialTerms", b2 =>
                                {
                                    b2.Property<Guid>("ExtractedInfoDocumentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Amount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Term")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExtractedInfoDocumentId", "Id");

                                    b2.ToTable("FinancialTerms", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ExtractedInfoDocumentId");
                                });

                            b1.OwnsMany("LegalAnalyzer.Domain.Entities.KeyDate", "KeyDates", b2 =>
                                {
                                    b2.Property<Guid>("ExtractedInfoDocumentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Date")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExtractedInfoDocumentId", "Id");

                                    b2.ToTable("KeyDates", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ExtractedInfoDocumentId");
                                });

                            b1.OwnsMany("LegalAnalyzer.Domain.Entities.Party", "Parties", b2 =>
                                {
                                    b2.Property<Guid>("ExtractedInfoDocumentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Role")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExtractedInfoDocumentId", "Id");

                                    b2.ToTable("Parties", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ExtractedInfoDocumentId");
                                });

                            b1.OwnsOne("LegalAnalyzer.Domain.Entities.RiskAssessment", "RiskAssessment", b2 =>
                                {
                                    b2.Property<Guid>("ExtractedInfoDocumentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Overall")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExtractedInfoDocumentId");

                                    b2.ToTable("RiskAssessments", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ExtractedInfoDocumentId");

                                    b2.OwnsMany("LegalAnalyzer.Domain.Entities.RiskFactor", "Factors", b3 =>
                                        {
                                            b3.Property<Guid>("RiskAssessmentExtractedInfoDocumentId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("Factor")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Risk")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("RiskAssessmentExtractedInfoDocumentId", "Id");

                                            b3.ToTable("RiskFactors", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("RiskAssessmentExtractedInfoDocumentId");
                                        });

                                    b2.Navigation("Factors");
                                });

                            b1.Navigation("FinancialTerms");

                            b1.Navigation("KeyDates");

                            b1.Navigation("Parties");

                            b1.Navigation("RiskAssessment");
                        });

                    b.Navigation("ExtractedInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.DocumentKeyword", b =>
                {
                    b.HasOne("LegalAnalyzer.Domain.Entities.Document", null)
                        .WithMany("Keywords")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.DocumentTag", b =>
                {
                    b.HasOne("LegalAnalyzer.Domain.Entities.Document", null)
                        .WithMany("Tags")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegalAnalyzer.Domain.Entities.Document", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
